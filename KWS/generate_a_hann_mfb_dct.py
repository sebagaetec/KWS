# -*- coding: utf-8 -*-
"""generate_a_MFB_DCT.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W1APgxE6hdRw-rRUvE0rzYHr8WPiXiO5
"""

import numpy as np
import librosa

# --- Parameters must match your preprocessing ---
SAMPLING_RATE = 16000
N_FFT = 640
HOP_LENGTH = 320
N_MELS = 40
N_MFCC = 10
FMIN = 20
FMAX = 4000

def generate_c_array(array, array_name):
    """Formats a numpy array into a C-style float array string."""
    c_str = f"const float {array_name}[{array.size}] = {{\n    "
    for i, val in enumerate(array.flatten()):
        c_str += f"{val:.6f}f, "
        if (i + 1) % 10 == 0:
            c_str += "\n    "
    c_str = c_str.strip().strip(',')
    c_str += "\n};"
    return c_str

# 1. Generate Mel Filterbank weights
mel_filterbank = librosa.filters.mel(
    sr=SAMPLING_RATE,
    n_fft=N_FFT,
    n_mels=N_MELS,
    fmin=FMIN,
    fmax=FMAX
)
# We need to transpose it for easier use in C: (n_fft/2 + 1, n_mels)
mel_filterbank_c_str = generate_c_array(mel_filterbank.T, "mel_filterbank")

# 2. Generate DCT-II Matrix
# Librosa's mfcc uses an orthonormal DCT-II.
# We create it manually to ensure correctness.
# DCT-II matrix generation (orthonormal)
# Based on https://docs.scipy.org/doc/scipy/reference/generated/scipy.fft.dct.html
# and https://github.com/librosa/librosa/blob/main/librosa/feature/spectral.py#L1735
dct_matrix = np.zeros((N_MFCC, N_MELS))
for i in range(N_MFCC):
    n = np.arange(N_MELS)
    if i == 0:
        dct_matrix[i, :] = np.ones(N_MELS) * np.sqrt(1.0 / N_MELS)
    else:
        dct_matrix[i, :] = np.cos(np.pi / N_MELS * (n + 0.5) * i) * np.sqrt(2.0 / N_MELS)

dct_matrix_c_str = generate_c_array(dct_matrix, "dct_matrix")


# 3. Generate Hann Window
hann_window = np.hanning(N_FFT)
hann_window_c_str = generate_c_array(hann_window, "hann_window")

# --- Print the C arrays ---
print("/********************************************************************/")
print("/* Audio Preprocessing Coefficients for C                  */")
print("/* Generated with Python script. Copy these into your C code.    */")
print("/********************************************************************/\n\n")

print("// --- Hanning Window ---")
print(f"#define HANN_WINDOW_SIZE {len(hann_window)}")
print(hann_window_c_str)
print("\n\n")

print("// --- Mel Filterbank ---")
print(f"#define MEL_FILTERBANK_ROWS {mel_filterbank.T.shape[0]}")
print(f"#define MEL_FILTERBANK_COLS {mel_filterbank.T.shape[1]}")
print(mel_filterbank_c_str)
print("\n\n")

print("// --- DCT-II Matrix ---")
print(f"#define DCT_MATRIX_ROWS {dct_matrix.shape[0]}")
print(f"#define DCT_MATRIX_COLS {dct_matrix.shape[1]}")
print(dct_matrix_c_str)
print("\n\n")